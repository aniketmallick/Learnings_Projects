Class is a blueprint
Object is the running instance

class Abc:
    def __init__(self):  # initialization (Constructor)  -- this is optional
        self.x = 0 # self.x gets initialized with 0

    def party(self): 
        self.x = self.x + 1
        print("So far - ",self.x)

    def __del__(self): # Destructor -- this is optional
        print(self.x)


an = Abc() # Initializes the Abc() class calls the init

an.party()
an.party()

OR
Abc.party(an) # calls using the object


Object Lifecycle - 
Garbage Collector helps in managing

# Inheritance 
class xyz(abc): #Inherited abc class 
    def __init__(self,nam):  # Parameter nam is being sent while initilalization
        super().__init__(nam) # The super class constructor is called

    def func():
        self.party() # The parent class function is called with the help of inheritance 

